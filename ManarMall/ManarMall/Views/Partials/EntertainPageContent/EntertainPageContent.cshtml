@using ManarMall.Models;
@using Umbraco.Web.Models;
@using Umbraco.Web;
@using umbraco.cms.businesslogic.web;
@using Skybrud.ImagePicker;
@using Skybrud.ImagePicker.Extensions;
@using Newtonsoft.Json.Linq;
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    var langs = Umbraco.TypedContentAtRoot();
    var umbracoHelper = new UmbracoHelper(UmbracoContext.Current);
    var umbracoPageId = 1116;
    var currentPage = Umbraco.Content(umbraco.NodeFactory.Node.GetCurrent().Id);
    IPublishedContent content = umbracoHelper.TypedContent(umbracoPageId);

    // var BrandImage1 = content.GetPropertyValue("brandImage1");

    ImagePickerItem BrandImage1 = content.GetImagePickerItem("brandImage1");
    ImagePickerItem BrandImage2 = content.GetImagePickerItem("brandImage2");
    ImagePickerItem lgMovieImage = content.GetImagePickerItem("lgMovieImage");
    ImagePickerItem BrandImage3 = content.GetImagePickerItem("brandImage3");
    ImagePickerItem BrandImage4 = content.GetImagePickerItem("brandImage4");
    ImagePickerItem BrandImage5 = content.GetImagePickerItem("brandImage5");
    ImagePickerItem BrandImage6 = content.GetImagePickerItem("brandImage6");
    ImagePickerItem BrandImage7 = content.GetImagePickerItem("brandImage7");


    ImagePickerList ShopLogo = currentPage.GetImagePickerList("shopImage");
    ImagePickerList Brandimage3 = currentPage.GetImagePickerList("Brandimage3");
    ImagePickerList imageslider = currentPage.GetImagePickerList("imageSlider");

    ImagePickerItem movieimage = content.GetImagePickerItem("selectImage");

    var data = content.GetPropertyValue<JArray>("movieSlider");
}

@if (BrandImage1.HasImage)
{

    <section class="container-fluid slider-main mv_main_banner" style="background-image: url(@BrandImage1.Image.Url);">
        <div class="row">
            <!-- <div class="slider-main-text text-center">
              <h1>LET<br>
              YOURSELF<br>GO!</h1>
            </div> -->
        </div>
    </section>
}

<section class="container-fluid  ent_details">
    <div class="container slider_movie1">
        <div class="row">
            <div class="col-lg-7 col-md-7   hidden-xs clearfix info_mv_hl">
                <div class="mv_slider_cont" style="z-index: 99; ">
                    <div class="  share_heading ">
                        <a href="" class="share1">SHARE</a>
                        <h1 class="">Entertainment</h1>
                    </div>
                    <h2 class="mv_desc_heading">@content.GetPropertyValue("description1")</h2>
                    <p class="mv_desc_info">@content.GetPropertyValue("description2")</p>
                    <hr>
                </div>
            </div>
            <div class="col-sm-12 clearfix">
                @{ string url = "";}
                @if (data != null)
                {
                    <div class="owl-carousel owl-theme movie_carasual">

                        @foreach (var item in data.Children())
                        {

                            var itemProperties = item.Children<JProperty>();
                            //you could do a foreach or a linq here depending on what you need to do exactly with the value
                            var myElement = itemProperties.FirstOrDefault(x => x.Name == "selectImage");
                            var myElementValue = myElement.Value; ////This is a JValue type


                            var itemProperties2 = myElementValue.Children<JProperty>();
                            //you could do a foreach or a linq here depending on what you need to do exactly with the value
                            var myElement2 = itemProperties2.FirstOrDefault(x => x.Name == "items");
                            var myElementValue2 = myElement2.Value; ////This is a JValue type

                            foreach (JObject data3 in myElementValue2)
                            {

                                url = data3.GetValue("imageUrl").ToString();

                                var substring = url.Replace("?width=250&height=156.25&mode=crop", "");
                                var description1 = (string)item["description1"];
                                var description2 = (string)item["description2"];

                                <div class="item disable-owl-swipe" style="background: url(@substring);">
                                    <div class="fun_info_overlay">
                                    </div>

                                    <div class="mv_slider_cont" style="z-index: 9999">

                                    </div>
                                </div>
                            }
                        }


                    </div>
                }
            </div>

        </div>
        <div class="row hidden-lg hidden-md hidden-sm  visible-xs mv_sl_bottom">
            <div class="col-lg-12 col-md-12  clearfix ">
                <div class="mv_slider_cont info_mv_hl" style="z-index: 99; ">
                    <div class="  share_heading ">
                        <a href="" class="share1">SHARE</a>
                        <h1 class="">Entertainment</h1>
                    </div>
                    <h2 class="mv_desc_heading">@content.GetPropertyValue("description1")</h2>
                    <p class="mv_desc_info">@content.GetPropertyValue("description2")</p>
                    <hr>
                </div>
            </div>

        </div>
    </div>
    <div class="container upcoming_movies">
        <div class="col-sm-12">
            <div class="row movie_heading">
                <h2>Now Showing</h2>
                <hr>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-4 col-xs-5 mv_bg_img">
                    @if (lgMovieImage.HasImage)
                    {
                        <div class="row main_mv_img" style="background: url(@lgMovieImage.Image.Url) no-repeat center;">

                        </div>
                    }
                </div>
                @{ ImagePickerList nowshowing = currentPage.GetImagePickerList("nowShowingSlider"); }
                <div class="col-sm-8 col-xs-7 mv_bg_img_slider">
                    <div class="row">
                        @if (nowshowing.Count > 0)
                        {
                            <div class="owl-carousel owl-theme movie_list">
                                @foreach (ImagePickerItem item in nowshowing.Items)
                                {
                                    <div class="item">
                                        <div class="col-sm-12  " style="background: url(@item.Image.Url) no-repeat center;">

                                        </div>
                                    </div>
                                }




                            </div>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="container-fluid fun_ent_place eqheight">
    <div class="row">
        @if (BrandImage2.HasImage)
        {
            <div class=" eqheight fun_cont_bg  " style="background-image: url(@BrandImage2.Image.Url);">

            </div>
        }
        <div class="container" style="top:0px; ">

            <!--  <div class="fun_info_overlay">
            </div> -->

            <div class="col-lg-9 col-md-8 col-sm-8 eqheight img_contnr  ">
                <div class="row">
                    @if (BrandImage2.HasImage)
                    {
                        <img src="@BrandImage2.Image.Url">
                    }
                    </div>
            </div>
            <div class="col-lg-3 col-md-4 col-sm-4 mv_info_main eqheight">
                <div class="row">
                    <div class="ent_fun_info text-right">
                        <div class="entr_img_holder">
                            <img src="~/img/logo-tridom-en.png">
                        </div>
                        <p>
                            @Umbraco.Field("brandImage2Description", recursive: true)
                        </p>
                        <hr>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>

</section>
@{
    var brandimages1 = content.GetPropertyValue("brandImage3");
    var brandimages2 = content.GetPropertyValue("brandImage4");
    var brandimages3 = content.GetPropertyValue("brandImage5");
    var brandimages4 = content.GetPropertyValue("brandImage6");
    var brandimages5 = content.GetPropertyValue("brandImage7");

}
<section class="container-fluid  entr_details">

    <div class="container">
        <div class="  row_img_capt">
            <div class="col-lg-4 col-md-4 col-sm-4   hidden-xs colimg">
                @if (BrandImage3.HasImage)
                {
                    <div class="photo-container" style="background-image:url(@BrandImage3.Image.Url);"></div>
                }


                <div class="slide_capt">
                    <div class="hover_info">
                        @Umbraco.Field("brandImage3Description", recursive: true) <hr>
                    </div>
                </div>
            </div>
            <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12 colimg">
                @if (BrandImage4.HasImage)
                {
                    <div class="photo-container" style="background-image:url(@BrandImage4.Image.Url);"></div>
                }


                <div class="slide_capt">
                    <div class="hover_info">
                        @Umbraco.Field("brandImage4Description", recursive: true) <hr>
                    </div>
                </div>
            </div>

        </div>
        <div class="  row_img_capt hidden-lg hidden-md hidden-sm visible-xs">

            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6   colimg">
                <div class="photo-container" style="background-image:url(@BrandImage5.Image.Url);"></div>

                <div class="slide_capt">
                    <div class="hover_info">
                        @Umbraco.Field("brandImage5Description", recursive: true) <hr>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6   colimg">
                <div class="photo-container" style="background-image:url(@BrandImage6.Image.Url);"></div>

                <div class="slide_capt">
                    <div class="hover_info">
                        @Umbraco.Field("brandImage6Description", recursive: true) <hr>
                    </div>
                </div>
            </div>
        </div>
        <div class="  row_img_capt">

            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6  hidden-xs colimg">
                @if (BrandImage5.HasImage)
                {
                    <div class="photo-container" style="background-image:url(@BrandImage5.Image.Url);"></div>
                }


                <div class="slide_capt">
                    <div class="hover_info">
                        @Umbraco.Field("brandImage5Description", recursive: true) <hr>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6 colimg">
                @if (BrandImage6.HasImage)
                {
                    <div class="photo-container" style="background-image:url(@BrandImage6.Image.Url);"></div>
                }


                <div class="slide_capt">
                    <div class="hover_info">
                        @Umbraco.Field("brandImage6Description", recursive: true) <hr>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6 colimg">
                @if (BrandImage7.HasImage)
                {
                    <div class="photo-container" style="background-image:url(@BrandImage7.Image.Url);"></div>
                }


                <div class="slide_capt">
                    <div class="hover_info">
                        @Umbraco.Field("brandImage7Description", recursive: true) <hr>
                    </div>
                </div>
            </div>


        </div>
    </div>




</section>